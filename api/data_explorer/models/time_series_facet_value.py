# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from data_explorer.models.base_model_ import Model
from data_explorer.models.facet_value import FacetValue  # noqa: F401,E501
from data_explorer import util


class TimeSeriesFacetValue(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, time=None, values=None):  # noqa: E501
        """TimeSeriesFacetValue - a model defined in Swagger

        :param time: The time of this TimeSeriesFacetValue.  # noqa: E501
        :type time: int
        :param values: The values of this TimeSeriesFacetValue.  # noqa: E501
        :type values: List[FacetValue]
        """
        self.swagger_types = {'time': int, 'values': List[FacetValue]}

        self.attribute_map = {'time': 'time', 'values': 'values'}

        self._time = time
        self._values = values

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TimeSeriesFacetValue of this TimeSeriesFacetValue.  # noqa: E501
        :rtype: TimeSeriesFacetValue
        """
        return util.deserialize_model(dikt, cls)

    @property
    def time(self):
        """Gets the time of this TimeSeriesFacetValue.

        Value used for time series.  # noqa: E501

        :return: The time of this TimeSeriesFacetValue.
        :rtype: int
        """
        return self._time

    @time.setter
    def time(self, time):
        """Sets the time of this TimeSeriesFacetValue.

        Value used for time series.  # noqa: E501

        :param time: The time of this TimeSeriesFacetValue.
        :type time: int
        """

        self._time = time

    @property
    def values(self):
        """Gets the values of this TimeSeriesFacetValue.


        :return: The values of this TimeSeriesFacetValue.
        :rtype: List[FacetValue]
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this TimeSeriesFacetValue.


        :param values: The values of this TimeSeriesFacetValue.
        :type values: List[FacetValue]
        """

        self._values = values
